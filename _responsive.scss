/*
 * Editable Framework Variables
 */
$responsive-num-columns: 12 !default;
$responsive-row-width: 100% !default;
$responsive-gutters-total-width: 20% !default;
$responsive-gutter-width: $responsive-gutters-total-width / $responsive-num-columns !default;
$responsive-col-width: ($responsive-row-width - $responsive-gutters-total-width) / $responsive-num-columns !default;
// the min-width of the screen where collapsed columns will span as defined.
// you can change the breakpoint where this happens by setting this variable before including this module.
$responsive-media-col-expand: 768px !default;


/*
 * Editable Stylesheet Building Blocks
 */
$responsive-row-class: 'row' !default; // ex. <ul class="row">
$responsive-column-class-prefix: 'col' !default; // ex. <li class="col-12">
$responsive-column-offset-class-prefix: 'col-offset' !default; // ex. <li class="col-5 col-offset-3">

@mixin responsive-row-collapsed {
  margin-left: 0;
  margin-bottom: 20px;
}
@mixin responsive-row-expanded {
  margin-left : -$responsive-gutter-width;
}
@mixin responsive-column-collapsed {
  width: 100%;
  margin-left: 0;
  margin-bottom: 5px;
  float: none;
}
@mixin responsive-column-expanded {
  float: left;
  margin-left: $responsive-gutter-width;
}
@mixin responsive-column-expanded-width ($span-size) {
  width: ($responsive-col-width * $span-size) + ($responsive-gutter-width * ($span-size - 1));
}
@mixin responsive-offset-expanded ($offset-size) {
  margin-left: ($responsive-col-width * $offset-size) + ($responsive-gutter-width * ($offset-size + 1));
}


/*
 * Mixins
 *
 * These exist so that you can define fluid responsive layouts,
 * without a fixed set of presentational classes and breakpoints.
 *
 ***************
 *
 * You can, for instance, get equal-width columns by doing:
 *
 *    <div class="content">
 *      <div class="description-left">...</div>
 *      <div class="description-right">...</div>
 *    </div>
 *
 *    .content {
 *      @include row;
 *    }
 *
 *    .description-left, .description-right {
 *      @include col-span(6)
 *    }
 *
 ***************
 *
 * Or you can do something funky with:
 *
 *   .description-left {
 *     @include col-span(3);
 *   }
 *
 *   .description-right {
 *     @include col-span(3);
 *     @include col-offset(3);
 *   }
 *
 ***************
 *
 * You could even adjust the collapsing breakpoint manually with:
 *
 *   .content {
 *     @include row(500px);
 *   }
 *   .description-left {
 *     @include col-span(3, 500px);
 *   }
 *
 *   .description-right {
 *     @include col-span(3, 500px);
 *     @include col-offset(3, 500px);
 *   }
 *
 * Or adjust the breakpoint globally by setting the
 * variable proper before including this module with SASS:
 *
 * $responsive-media-col-expand: 500px;
 * @import 'responsive';
 *
*/
@mixin row ($expand: $responsive-media-col-expand) {
  @include responsive-row-collapsed;

  @media screen and (min-width: $expand) {
    @include responsive-row-expanded;
  }
}

@mixin col-span ($span-size, $expand: $responsive-media-col-expand) {
  @include responsive-column-collapsed;

  @media screen and (min-width: $expand) {
    @include responsive-column-expanded;
    @include responsive-column-expanded-width($span-size);
  }
}

@mixin col-offset ($offset-size, $expand: $responsive-media-col-expand) {
  @media screen and (min-width: $expand) {
    @include responsive-offset-expanded($offset-size);
  }
}


/*
 * Responsive Classes
 */
.#{$responsive-row-class} {
  @include responsive-row-collapsed;
}

%responsive-column-collapsed-extension {
  @include responsive-column-collapsed;
}
@for $i from 1 through $responsive-num-columns {
  .#{$responsive-column-class-prefix}-#{$i} {
    @extend %responsive-column-collapsed-extension;
  }
}

@media screen and (min-width: $responsive-media-col-expand) {
  .#{$responsive-row-class} {
    @include responsive-row-expanded;
  }

  %responsive-column-expanded-extension {
    @include responsive-column-expanded;
  }
  @for $i from 1 through $responsive-num-columns {
    .#{$responsive-column-class-prefix}-#{$i} {
      @extend %responsive-column-expanded-extension;
      @include responsive-column-expanded-width($i);
    }
  }

  // offsets must be defined after col-s for the cascade's sake,
  // since offsets must take higher priority than col-s
  @for $i from 1 through $responsive-num-columns - 1 {
    .#{$responsive-column-offset-class-prefix}-#{$i} {
      @include responsive-offset-expanded($i);
    }
  }
}
